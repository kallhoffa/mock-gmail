[{"/Users/akallhoff/Projects/SDI/mock-gmail/src/index.js":"1","/Users/akallhoff/Projects/SDI/mock-gmail/src/reportWebVitals.js":"2","/Users/akallhoff/Projects/SDI/mock-gmail/src/App.js":"3","/Users/akallhoff/Projects/SDI/mock-gmail/src/Components/Email.js":"4","/Users/akallhoff/Projects/SDI/mock-gmail/src/Components/Inbox.js":"5","/Users/akallhoff/Projects/SDI/mock-gmail/src/Components/Compose.js":"6"},{"size":500,"mtime":1607442603058,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1607442603059,"results":"9","hashOfConfig":"8"},{"size":1401,"mtime":1607461954828,"results":"10","hashOfConfig":"8"},{"size":517,"mtime":1607455984196,"results":"11","hashOfConfig":"8"},{"size":1126,"mtime":1607461896385,"results":"12","hashOfConfig":"8"},{"size":670,"mtime":1607463250070,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"pex8pl",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/akallhoff/Projects/SDI/mock-gmail/src/index.js",[],"/Users/akallhoff/Projects/SDI/mock-gmail/src/reportWebVitals.js",[],"/Users/akallhoff/Projects/SDI/mock-gmail/src/App.js",["28","29"],"/Users/akallhoff/Projects/SDI/mock-gmail/src/Components/Email.js",["30"],"import React from 'react'\n\nconst Email = ({match, emails}) => {\n    if (emails){\n        const {emailId} = match.params\n        var email = emails.filter(email => email.id == emailId)[0]\n\n        return(\n            <div className=\"Email\">\n                <h1>{email.subject}</h1>\n                <h3>From: {email.sender}</h3>\n                <p>{email.message}</p>\n            </div>\n        )\n    } else {\n        return(\n            <div className=\"Email\">Loading...</div>\n        )\n    }\n\n}\n\nexport default Email\n",["31","32"],"/Users/akallhoff/Projects/SDI/mock-gmail/src/Components/Inbox.js",[],"/Users/akallhoff/Projects/SDI/mock-gmail/src/Components/Compose.js",[],{"ruleId":"33","severity":1,"message":"34","line":1,"column":8,"nodeType":"35","messageId":"36","endLine":1,"endColumn":12},{"ruleId":"33","severity":1,"message":"37","line":9,"column":34,"nodeType":"35","messageId":"36","endLine":9,"endColumn":38},{"ruleId":"38","severity":1,"message":"39","line":6,"column":53,"nodeType":"40","messageId":"41","endLine":6,"endColumn":55},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-native-reassign",["46"],"no-negated-in-lhs",["47"],"no-global-assign","no-unsafe-negation"]